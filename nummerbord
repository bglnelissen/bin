#!/bin/bash
# Convert a series of characters to a correct format for Dutch numberplates.
# b.nelissen

# nummerplaat opmaken: input 96ttH4, output 96-TTH-4

# set variables
inputRAW="$1"
input="$inputRAW"
nummerbord=""
letter='[A-Z]'
number='[0-9]'
nummerbordRegex='^[0-9A-Z]{1,3}-[0-9A-Z]{1,3}-[0-9A-Z]{1,3}$'
nummerbordLengte=8 # 6 letters + 2 dashes
characterType=""
previousCharacterType=""

# test for input
if [ -z "$input" ]; then
  echo "Usage:"
  echo "$0 SEBE15"
  exit 1
fi

# echo "Input: $input"
# remove dashes
input=$(echo "$input" | perl -pe 's/-//g')

# convert to upper case
input=$(echo "$input" | tr '[:lower:]' '[:upper:]')

# walk through all characters, check if number or letter
for (( i=0; i<${#input}; i++ )); do
  character="${input:$i:1}"
  if [[ "$character" =~ $letter ]]; then
      characterType="letter"
  else
      characterType="number"
  fi

  # check if previous character type is the same is current character type
  if [ "$characterType" == "$previousCharacterType" ] || [ "" == "$previousCharacterType" ]; then
    nummerbord="$nummerbord""$character"
  else
    nummerbord="$nummerbord""-""$character"
  fi
  previousCharacterType="$characterType"

done

# uitzonderingen van 4 tekens achter elkaar XX-YY-00 of 11-33-XX
nummerbord=$(echo "$nummerbord" | perl -pe "s/([0-9]{2})([0-9]{2})/\1-\2/g")
nummerbord=$(echo "$nummerbord" | perl -pe "s/([A-Z]{2})([A-Z]{2})/\1-\2/g")

# check structure
# always 6 characters in 3 pairs with a deviding dash. A pair can be 1, 2 or 3 characters.

# && [ "${#nummerbord}" -ge "$nummerbordLengte" ] 
if  [[ "$nummerbord" =~ $nummerbordRegex ]] && \
    [[ "${#nummerbord}" -ge "$nummerbordLengte" ]]; then
  printf "$nummerbord"
  exit 0
else
  echo "invalid: ${inputRAW}, parsed as ${nummerbord}"
  exit 1
fi